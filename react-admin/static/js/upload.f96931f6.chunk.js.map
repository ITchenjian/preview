{"version":3,"file":"static/js/upload.f96931f6.chunk.js","mappings":"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","sources":["components/CustomBreadcrumb/CustomBreadcrumb.jsx","components/CustomBreadcrumb/index.js","views/Others/Upload/Upload.jsx","views/Others/Upload/index.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Breadcrumb } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CustomBreadcrumb = props => {\r\n\r\n    const extraBreadcrumbItems = props.arr.map(res => {\r\n        if (typeof res === 'object') {\r\n            return {\r\n                key: res.path,\r\n                title: <Link to={res.path}>{res.title}</Link>,\r\n            };\r\n        } else {\r\n            return {\r\n                key: res,\r\n                title: res,\r\n            }\r\n        }\r\n    });\r\n\r\n    const breadcrumbItems = [{\r\n        title: <Link to='/index'>首页</Link>,\r\n        key: 'home',\r\n    }].concat(extraBreadcrumbItems)\r\n\r\n    return <Breadcrumb style={{ marginBottom: 16 }} items={breadcrumbItems}></Breadcrumb> \r\n}\r\n\r\nCustomBreadcrumb.propTypes = {\r\n    arr: PropTypes.array.isRequired\r\n}\r\n\r\nfunction shouldRender(nextProps, prevProps) {\r\n    if (nextProps.arr.join() === prevProps.arr.join()) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport default React.memo(CustomBreadcrumb, shouldRender)\r\n","import CustomBreadcrumb from './CustomBreadcrumb.jsx'\r\n\r\nexport default CustomBreadcrumb\r\n","import { Component } from 'react'\r\nimport { Layout, Row, Col, Upload, message, Button, Divider, Modal } from 'antd'\r\nimport { LoadingOutlined, PlusOutlined, UploadOutlined, InboxOutlined } from '@ant-design/icons'\r\nimport CustomBreadcrumb from '@/components/CustomBreadcrumb'\r\n\r\nconst { Dragger } = Upload\r\n\r\nconst props = {\r\n    name: 'file',\r\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n    headers: {\r\n        authorization: 'authorization-text'\r\n    },\r\n    onChange(info) {\r\n        if (info.file.status !== 'uploading') {\r\n            console.log(info.file, info.fileList)\r\n        }\r\n        if (info.file.status === 'done') {\r\n            message.success(`${info.file.name} file uploaded successfully`)\r\n        } else if (info.file.status === 'error') {\r\n            message.error(`${info.file.name} file upload failed.`)\r\n        }\r\n    }\r\n}\r\n\r\nfunction getBase64(img, callback) {\r\n    const reader = new FileReader()\r\n    reader.addEventListener('load', () => callback(reader.result))\r\n    reader.readAsDataURL(img)\r\n}\r\n\r\nfunction getBase_64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader()\r\n        reader.readAsDataURL(file)\r\n        reader.onload = () => resolve(reader.result)\r\n        reader.onerror = error => reject(error)\r\n    })\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\r\n    if (!isJpgOrPng) {\r\n        message.error('You can only upload JPG/PNG file!')\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2\r\n    if (!isLt2M) {\r\n        message.error('Image must smaller than 2MB!')\r\n    }\r\n    return isJpgOrPng && isLt2M\r\n}\r\n\r\nclass UploadView extends Component {\r\n    state = {\r\n        loading: false,\r\n        previewVisible: false,\r\n        previewImage: '',\r\n        imageUrl: '',\r\n        fileList: [\r\n            {\r\n                uid: '-1',\r\n                name: 'image.png',\r\n                status: 'done',\r\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\r\n            },\r\n            {\r\n                uid: '-2',\r\n                name: 'image.png',\r\n                status: 'done',\r\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\r\n            },\r\n            {\r\n                uid: '-3',\r\n                name: 'image.png',\r\n                status: 'done',\r\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\r\n            },\r\n            {\r\n                uid: '-4',\r\n                name: 'image.png',\r\n                status: 'done',\r\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\r\n            },\r\n            {\r\n                uid: '-5',\r\n                name: 'image.png',\r\n                status: 'done',\r\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\r\n            }\r\n        ]\r\n    }\r\n\r\n    handleChange = info => {\r\n        if (info.file.status === 'uploading') {\r\n            this.setState({ loading: true })\r\n        }\r\n        if (info.file.status === 'done') {\r\n            // Get this url from response in real world.\r\n            getBase64(info.file.originFileObj, imageUrl =>\r\n                this.setState({\r\n                    imageUrl,\r\n                    loading: false\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    handleCancel = () => this.setState({ previewVisible: false })\r\n\r\n    handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase_64(file.originFileObj)\r\n        }\r\n\r\n        this.setState({\r\n            previewImage: file.url || file.preview,\r\n            previewVisible: true\r\n        })\r\n    }\r\n    handle_Change = ({ fileList }) => this.setState({ fileList })\r\n\r\n    render() {\r\n        const uploadButton = (\r\n            <div>\r\n                {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n                <div className='ant-upload-text'>Upload</div>\r\n            </div>\r\n        )\r\n        const { imageUrl, previewVisible, previewImage, fileList } = this.state\r\n        return (\r\n            <Layout>\r\n                <div>\r\n                    <CustomBreadcrumb arr={['其它', '上传']}></CustomBreadcrumb>\r\n                </div>\r\n                <div className='base-style'>\r\n                    <h3>何时使用</h3>\r\n                    <p>上传是将信息（网页、文字、图片、视频等）通过网页或者上传工具发布到远程服务器上的过程</p>\r\n                </div>\r\n                <Row gutter={8}>\r\n                    <Col span={12}>\r\n                        <div className='base-style'>\r\n                            <Divider orientation='left'>普通模式</Divider>\r\n                            <Upload {...props}>\r\n                                <Button>\r\n                                    <UploadOutlined /> Click to Upload\r\n                                </Button>\r\n                            </Upload>\r\n                        </div>\r\n                        <div className='base-style'>\r\n                            <Divider orientation='left'>照片墙</Divider>\r\n                            <div className='clearfix'>\r\n                                <Upload\r\n                                    action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\r\n                                    listType='picture-card'\r\n                                    fileList={fileList}\r\n                                    onPreview={this.handlePreview}\r\n                                    onChange={this.handle_Change}>\r\n                                    {fileList.length >= 8 ? null : uploadButton}\r\n                                </Upload>\r\n                                <Modal open={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n                                    <img alt='example' style={{ width: '100%' }} src={previewImage} />\r\n                                </Modal>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <div className='base-style'>\r\n                            <Divider orientation='left'>自定义模式</Divider>\r\n                            <Upload\r\n                                name='avatar'\r\n                                listType='picture-card'\r\n                                className='avatar-uploader'\r\n                                showUploadList={false}\r\n                                action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\r\n                                beforeUpload={beforeUpload}\r\n                                onChange={this.handleChange}>\r\n                                {imageUrl ? (\r\n                                    <img src={imageUrl} alt='avatar' style={{ width: '100%' }} />\r\n                                ) : (\r\n                                    uploadButton\r\n                                )}\r\n                            </Upload>\r\n                        </div>\r\n                        <div className='base-style'>\r\n                            <Divider orientation='left'>可拖拽上传</Divider>\r\n                            <Dragger {...props}>\r\n                                <p className='ant-upload-drag-icon'>\r\n                                    <InboxOutlined />\r\n                                </p>\r\n                                <p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n                                <p className='ant-upload-hint'>\r\n                                    Support for a single or bulk upload. Strictly prohibit from uploading company data\r\n                                    or other band files\r\n                                </p>\r\n                            </Dragger>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UploadView\r\n","import UploadView from './Upload.jsx'\r\n\r\nexport default UploadView\r\n"],"names":["CustomBreadcrumb","props","extraBreadcrumbItems","arr","map","res","key","path","title","_jsx","Link","to","children","breadcrumbItems","concat","Breadcrumb","style","marginBottom","items","shouldRender","nextProps","prevProps","join","React","Dragger","Upload","name","action","headers","authorization","onChange","info","file","status","console","log","fileList","message","getBase_64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","beforeUpload","isJpgOrPng","type","isLt2M","size","UploadView","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","state","loading","previewVisible","previewImage","imageUrl","uid","url","handleChange","setState","img","callback","addEventListener","getBase64","originFileObj","handleCancel","handlePreview","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","preview","sent","stop","_x","handle_Change","_ref2","_createClass","value","uploadButton","_jsxs","this","LoadingOutlined","PlusOutlined","className","_this$state","Layout","Row","gutter","Col","span","Divider","orientation","_objectSpread","Button","UploadOutlined","listType","onPreview","Modal","open","footer","onCancel","alt","width","src","showUploadList","InboxOutlined","Component"],"sourceRoot":""}