{"version":3,"file":"static/js/tree.94e2effe.chunk.js","mappings":"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","sources":["components/CustomBreadcrumb/CustomBreadcrumb.jsx","components/CustomBreadcrumb/index.js","views/ShowView/Tree/Tree.jsx","views/ShowView/Tree/index.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Breadcrumb } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CustomBreadcrumb = props => {\r\n\r\n    const extraBreadcrumbItems = props.arr.map(res => {\r\n        if (typeof res === 'object') {\r\n            return {\r\n                key: res.path,\r\n                title: <Link to={res.path}>{res.title}</Link>,\r\n            };\r\n        } else {\r\n            return {\r\n                key: res,\r\n                title: res,\r\n            }\r\n        }\r\n    });\r\n\r\n    const breadcrumbItems = [{\r\n        title: <Link to='/index'>首页</Link>,\r\n        key: 'home',\r\n    }].concat(extraBreadcrumbItems)\r\n\r\n    return <Breadcrumb style={{ marginBottom: 16 }} items={breadcrumbItems}></Breadcrumb> \r\n}\r\n\r\nCustomBreadcrumb.propTypes = {\r\n    arr: PropTypes.array.isRequired\r\n}\r\n\r\nfunction shouldRender(nextProps, prevProps) {\r\n    if (nextProps.arr.join() === prevProps.arr.join()) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport default React.memo(CustomBreadcrumb, shouldRender)\r\n","import CustomBreadcrumb from './CustomBreadcrumb.jsx'\r\n\r\nexport default CustomBreadcrumb\r\n","import React, { Component } from 'react'\r\nimport CustomBreadcrumb from '@/components/CustomBreadcrumb'\r\nimport { Layout, Divider, Row, Col, Tree, Input } from 'antd'\r\n\r\nconst { TreeNode } = Tree\r\n\r\nconst treeData = [\r\n    {\r\n        title: '0-0',\r\n        key: '0-0',\r\n        children: [\r\n            {\r\n                title: '0-0-0',\r\n                key: '0-0-0',\r\n                children: [\r\n                    { title: '0-0-0-0', key: '0-0-0-0' },\r\n                    { title: '0-0-0-1', key: '0-0-0-1' },\r\n                    { title: '0-0-0-2', key: '0-0-0-2' }\r\n                ]\r\n            },\r\n            {\r\n                title: '0-0-1',\r\n                key: '0-0-1',\r\n                children: [\r\n                    { title: '0-0-1-0', key: '0-0-1-0' },\r\n                    { title: '0-0-1-1', key: '0-0-1-1' },\r\n                    { title: '0-0-1-2', key: '0-0-1-2' }\r\n                ]\r\n            },\r\n            {\r\n                title: '0-0-2',\r\n                key: '0-0-2'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '0-1',\r\n        key: '0-1',\r\n        children: [\r\n            { title: '0-1-0-0', key: '0-1-0-0' },\r\n            { title: '0-1-0-1', key: '0-1-0-1' },\r\n            { title: '0-1-0-2', key: '0-1-0-2' }\r\n        ]\r\n    },\r\n    {\r\n        title: '0-2',\r\n        key: '0-2'\r\n    }\r\n]\r\n\r\nconst { Search } = Input\r\n\r\nconst x = 3\r\nconst y = 2\r\nconst z = 1\r\nconst gData = []\r\n\r\nconst generateData = (_level, _preKey, _tns) => {\r\n    const preKey = _preKey || '0'\r\n    const tns = _tns || gData\r\n\r\n    const children = []\r\n    for (let i = 0; i < x; i++) {\r\n        const key = `${preKey}-${i}`\r\n        tns.push({ title: key, key })\r\n        if (i < y) {\r\n            children.push(key)\r\n        }\r\n    }\r\n    if (_level < 0) {\r\n        return tns\r\n    }\r\n    const level = _level - 1\r\n    children.forEach((key, index) => {\r\n        tns[index].children = []\r\n        return generateData(level, key, tns[index].children)\r\n    })\r\n}\r\ngenerateData(z)\r\n\r\nconst dataList = []\r\nconst generateList = data => {\r\n    for (let i = 0; i < data.length; i++) {\r\n        const node = data[i]\r\n        const { key } = node\r\n        dataList.push({ key, title: key })\r\n        if (node.children) {\r\n            generateList(node.children)\r\n        }\r\n    }\r\n}\r\ngenerateList(gData)\r\n\r\nconst getParentKey = (key, tree) => {\r\n    let parentKey\r\n    for (let i = 0; i < tree.length; i++) {\r\n        const node = tree[i]\r\n        if (node.children) {\r\n            if (node.children.some(item => item.key === key)) {\r\n                parentKey = node.key\r\n            } else if (getParentKey(key, node.children)) {\r\n                parentKey = getParentKey(key, node.children)\r\n            }\r\n        }\r\n    }\r\n    return parentKey\r\n}\r\n\r\nclass TreeView extends Component {\r\n    state = {\r\n        expandedKeys: ['0-0-0', '0-0-1'],\r\n        autoExpandParent: true,\r\n        checkedKeys: ['0-0-0'],\r\n        selectedKeys: [],\r\n        searchValue: '',\r\n        treeDataState: [{\r\n            title: 'parent 1',\r\n            key: '0-0',\r\n            children: [{\r\n                title: 'parent 1-0',\r\n                key: '0-0-0',\r\n                disabled: true,\r\n                children: [{\r\n                    title: 'leaf',\r\n                    key: '0-0-0-0',\r\n                    disableCheckbox: true,\r\n                },\r\n                {\r\n                    title: 'leaf',\r\n                    key: '0-0-0-1',\r\n                }],\r\n            },{\r\n                title: 'parent 1-1',\r\n                key: '0-0-1',\r\n                children: [{\r\n                    title: (\r\n                    <span\r\n                        style={{\r\n                        color: '#1890ff',\r\n                        }}\r\n                    >\r\n                        sss\r\n                    </span>\r\n                    ),\r\n                    key: '0-0-1-0',\r\n                }],\r\n            }],\r\n        }],\r\n        gData\r\n    }\r\n\r\n    onDragEnter = info => {\r\n        console.log(info)\r\n        // expandedKeys 需要受控时设置\r\n        this.setState({\r\n            expandedKeys: info.expandedKeys\r\n        })\r\n    }\r\n\r\n    onExpand = expandedKeys => {\r\n        console.log('onExpand', expandedKeys)\r\n        this.setState({\r\n            expandedKeys,\r\n            autoExpandParent: false\r\n        })\r\n    }\r\n\r\n    onDrop = info => {\r\n        console.log(info)\r\n        const dropKey = info.node.props.eventKey\r\n        const dragKey = info.dragNode.props.eventKey\r\n        const dropPos = info.node.props.pos.split('-')\r\n        const dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1])\r\n\r\n        const loop = (data, key, callback) => {\r\n            data.forEach((item, index, arr) => {\r\n                if (item.key === key) {\r\n                    return callback(item, index, arr)\r\n                }\r\n                if (item.children) {\r\n                    return loop(item.children, key, callback)\r\n                }\r\n            })\r\n        }\r\n        const data = [...this.state.gData]\r\n\r\n        // Find dragObject\r\n        let dragObj\r\n        loop(data, dragKey, (item, index, arr) => {\r\n            arr.splice(index, 1)\r\n            dragObj = item\r\n        })\r\n\r\n        if (!info.dropToGap) {\r\n            // Drop on the content\r\n            loop(data, dropKey, item => {\r\n                item.children = item.children || []\r\n                // where to insert 示例添加到尾部，可以是随意位置\r\n                item.children.push(dragObj)\r\n            })\r\n        } else if (\r\n            (info.node.props.children || []).length > 0 && // Has children\r\n            info.node.props.expanded && // Is expanded\r\n            dropPosition === 1 // On the bottom gap\r\n        ) {\r\n            loop(data, dropKey, item => {\r\n                item.children = item.children || []\r\n                // where to insert 示例添加到尾部，可以是随意位置\r\n                item.children.unshift(dragObj)\r\n            })\r\n        } else {\r\n            let ar\r\n            let i\r\n            loop(data, dropKey, (item, index, arr) => {\r\n                ar = arr\r\n                i = index\r\n            })\r\n            if (dropPosition === -1) {\r\n                ar.splice(i, 0, dragObj)\r\n            } else {\r\n                ar.splice(i + 1, 0, dragObj)\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            gData: data\r\n        })\r\n    }\r\n\r\n    onCheck = checkedKeys => {\r\n        console.log('onCheck', checkedKeys)\r\n        this.setState({ checkedKeys })\r\n    }\r\n\r\n    onSelect = (selectedKeys, info) => {\r\n        console.log('onSelect', info)\r\n        this.setState({ selectedKeys })\r\n    }\r\n\r\n    renderTreeNodes = data =>\r\n        data.map(item => {\r\n            if (item.children) {\r\n                return (\r\n                    <TreeNode title={item.title} key={item.key} dataRef={item}>\r\n                        {this.renderTreeNodes(item.children)}\r\n                    </TreeNode>\r\n                )\r\n            }\r\n            return <TreeNode key={item.key} {...item} />\r\n        })\r\n\r\n    onChange = e => {\r\n        const { value } = e.target\r\n        const expandedKeys = dataList\r\n            .map(item => {\r\n                if (item.title.indexOf(value) > -1) {\r\n                    return getParentKey(item.key, gData)\r\n                }\r\n                return null\r\n            })\r\n            .filter((item, i, self) => item && self.indexOf(item) === i)\r\n        this.setState({\r\n            expandedKeys,\r\n            searchValue: value,\r\n            autoExpandParent: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { searchValue, expandedKeys, autoExpandParent, treeDataState } = this.state\r\n        const loop = data =>\r\n            data.map(item => {\r\n                const index = item.title.indexOf(searchValue)\r\n                const beforeStr = item.title.substr(0, index)\r\n                const afterStr = item.title.substr(index + searchValue.length)\r\n                const title =\r\n                    index > -1 ? (\r\n                        <span>\r\n                            {beforeStr}\r\n                            <span style={{ color: '#f50' }}>{searchValue}</span>\r\n                            {afterStr}\r\n                        </span>\r\n                    ) : (\r\n                        <span>{item.title}</span>\r\n                    )\r\n                if (item.children) {\r\n                    return {\r\n                        title: title,\r\n                        key: item.key,\r\n                        children: loop(item.children)\r\n                    }\r\n                }\r\n                return {\r\n                    title: title,\r\n                    key: item.key\r\n                }\r\n            })\r\n        return (\r\n            <Layout className='animated fadeIn'>\r\n                <div>\r\n                    <CustomBreadcrumb arr={['展示', '树形控件']}></CustomBreadcrumb>\r\n                </div>\r\n                <div className='base-style'>\r\n                    <h3>何时使用</h3>\r\n                    <Divider />\r\n                    <p>\r\n                        文件夹、组织架构、生物分类、国家地区等等，世间万物的大多数结构都是树形结构。使用 树控件\r\n                        可以完整展现其中的层级关系，并具有展开收起选择等交互功能。\r\n                    </p>\r\n                </div>\r\n                <Row gutter={8}>\r\n                    <Col span={12}>\r\n                        <div className='base-style'>\r\n                            <Divider orientation='left'>基础用法</Divider>\r\n                            <Tree\r\n                                checkable\r\n                                showIcon\r\n                                defaultExpandedKeys={['0-0-0', '0-0-1']}\r\n                                defaultSelectedKeys={['0-0-0', '0-0-1']}\r\n                                defaultCheckedKeys={['0-0-0', '0-0-1']}\r\n                                onSelect={this.onSelect}\r\n                                onCheck={this.onCheck}\r\n                                treeData={treeDataState}>\r\n                            </Tree>\r\n                        </div>\r\n                        <div className='base-style'>\r\n                            <Divider orientation='left'>可搜索</Divider>\r\n                            <Search style={{ marginBottom: 8 }} placeholder='Search' onChange={this.onChange} />\r\n                            <Tree\r\n                                showLine\r\n                                onExpand={this.onExpand}\r\n                                expandedKeys={expandedKeys}\r\n                                autoExpandParent={autoExpandParent}\r\n                                treeData={loop(gData)}>\r\n                            </Tree>\r\n                        </div>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <div className='base-style'>\r\n                            <Divider orientation='left'>受控控件</Divider>\r\n                            <Tree\r\n                                checkable\r\n                                onExpand={this.onExpand}\r\n                                expandedKeys={this.state.expandedKeys}\r\n                                autoExpandParent={this.state.autoExpandParent}\r\n                                onCheck={this.onCheck}\r\n                                checkedKeys={this.state.checkedKeys}\r\n                                onSelect={this.onSelect}\r\n                                selectedKeys={this.state.selectedKeys}\r\n                                treeData={treeData}>\r\n                            </Tree>\r\n                        </div>\r\n                        <div className='base-style'>\r\n                            <Divider orientation='left'>可拖拽</Divider>\r\n                            <Tree\r\n                                className='draggable-tree'\r\n                                defaultExpandedKeys={this.state.expandedKeys}\r\n                                draggable\r\n                                blockNode\r\n                                onDragEnter={this.onDragEnter}\r\n                                onDrop={this.onDrop}\r\n                                treeData={this.state.gData}>\r\n                            </Tree>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TreeView\r\n","import TreeView from './Tree.jsx'\r\n\r\nexport default TreeView\r\n"],"names":["CustomBreadcrumb","props","extraBreadcrumbItems","arr","map","res","key","path","title","_jsx","Link","to","children","breadcrumbItems","concat","Breadcrumb","style","marginBottom","items","shouldRender","nextProps","prevProps","join","React","TreeNode","Tree","treeData","Search","Input","gData","generateData","_level","_preKey","_tns","preKey","tns","i","push","level","forEach","index","dataList","generateList","data","length","node","getParentKey","tree","parentKey","some","item","TreeView","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","call","apply","state","expandedKeys","autoExpandParent","checkedKeys","selectedKeys","searchValue","treeDataState","disabled","disableCheckbox","color","onDragEnter","info","console","log","setState","onExpand","onDrop","dragObj","dropKey","eventKey","dragKey","dragNode","dropPos","pos","split","dropPosition","Number","loop","callback","_toConsumableArray","splice","dropToGap","expanded","unshift","ar","onCheck","onSelect","renderTreeNodes","dataRef","_objectSpread","onChange","e","value","target","indexOf","filter","self","_createClass","_this$state","this","_jsxs","Layout","className","Divider","Row","gutter","Col","span","orientation","checkable","showIcon","defaultExpandedKeys","defaultSelectedKeys","defaultCheckedKeys","placeholder","showLine","beforeStr","substr","afterStr","draggable","blockNode","Component"],"sourceRoot":""}