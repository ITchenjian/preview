{"version":3,"file":"static/js/formBase.b4ecdc0b.chunk.js","mappings":"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","sources":["components/CustomBreadcrumb/CustomBreadcrumb.jsx","components/CustomBreadcrumb/index.js","views/FormView/FormBaseView/FormBaseView.jsx","views/FormView/FormBaseView/index.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Breadcrumb } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CustomBreadcrumb = props => {\r\n\r\n    const extraBreadcrumbItems = props.arr.map(res => {\r\n        if (typeof res === 'object') {\r\n            return {\r\n                key: res.path,\r\n                title: <Link to={res.path}>{res.title}</Link>,\r\n            };\r\n        } else {\r\n            return {\r\n                key: res,\r\n                title: res,\r\n            }\r\n        }\r\n    });\r\n\r\n    const breadcrumbItems = [{\r\n        title: <Link to='/index'>首页</Link>,\r\n        key: 'home',\r\n    }].concat(extraBreadcrumbItems)\r\n\r\n    return <Breadcrumb style={{ marginBottom: 16 }} items={breadcrumbItems}></Breadcrumb> \r\n}\r\n\r\nCustomBreadcrumb.propTypes = {\r\n    arr: PropTypes.array.isRequired\r\n}\r\n\r\nfunction shouldRender(nextProps, prevProps) {\r\n    if (nextProps.arr.join() === prevProps.arr.join()) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport default React.memo(CustomBreadcrumb, shouldRender)\r\n","import CustomBreadcrumb from './CustomBreadcrumb.jsx'\r\n\r\nexport default CustomBreadcrumb\r\n","import React, { Component } from 'react'\r\nimport CustomBreadcrumb from '@/components/CustomBreadcrumb'\r\nimport {\r\n    Alert,\r\n    Layout,\r\n    Row,\r\n    Col,\r\n    Divider,\r\n    Form,\r\n    Button,\r\n    Input,\r\n    InputNumber,\r\n    Checkbox,\r\n    Space,\r\n    Tooltip,\r\n    Cascader,\r\n    Select,\r\n    DatePicker,\r\n    Radio,\r\n    Rate,\r\n    Switch,\r\n    Slider,\r\n    AutoComplete,\r\n    message\r\n} from 'antd'\r\nimport { QuestionCircleOutlined } from '@ant-design/icons'\r\nimport '@/style/view-style/form.scss'\r\n\r\nconst { Option } = Select\r\n\r\nconst residences = [\r\n    {\r\n        value: 'sichuan',\r\n        label: '四川',\r\n        children: [\r\n            {\r\n                value: 'chengdu',\r\n                label: '成都',\r\n                children: [\r\n                    {\r\n                        value: 'gaoxin',\r\n                        label: '高新区'\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        value: 'gansu',\r\n        label: '甘肃',\r\n        children: [\r\n            {\r\n                value: 'lanzhou',\r\n                label: '兰州',\r\n                children: [\r\n                    {\r\n                        value: 'anning',\r\n                        label: '安宁区'\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nclass FromView extends Component {\r\n    formRef = React.createRef()\r\n    state = {\r\n        confirmDirty: false,\r\n        autoCompleteResult: [],\r\n        visible: true,\r\n        createModel: {\r\n            switch: true\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ visible: false })\r\n    }\r\n\r\n    handleFinish = values => {\r\n        console.log('handleFinish', values);\r\n        message.info('你很棒哦,这么快就填好了!')\r\n    }\r\n    handleFinishFailed = (data) => {\r\n        console.log('handleFinishFailed:', data)\r\n    }\r\n\r\n    handleConfirmBlur = e => {\r\n        const { value } = e.target\r\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value })\r\n    }\r\n\r\n    compareToFirstPassword = (rule, value, callback) => {\r\n        if (value && value !== this.formRef.current.getFieldValue('password')) {\r\n            return Promise.reject(new Error('两次输入密码不一致!'));\r\n        } else {\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n    validateToNextPassword = (rule, value, callback) => {\r\n        if (value && this.state.confirmDirty) {\r\n            this.formRef.current.validateFields(['confirm'], { force: true })\r\n        }\r\n        callback()\r\n    }\r\n\r\n    handleWebsiteChange = value => {\r\n        let autoCompleteResult\r\n        if (!value) {\r\n            autoCompleteResult = []\r\n        } else {\r\n            autoCompleteResult = ['@google.com', '@163.com', '@qq.com'].map(domain => `${value}${domain}`)\r\n        }\r\n        this.setState({ autoCompleteResult })\r\n    }\r\n\r\n    handleSwitchChange = value => {\r\n        // setState执行的是浅层的复制合并\r\n        const obj = this.state.createModel\r\n        obj.switch = value\r\n        this.setState({ createModel: obj })\r\n        console.log(this.state)\r\n    }\r\n    handleAgreementChange = e => {\r\n        const obj = this.state.createModel\r\n        obj.agreement = e.target.checked\r\n        this.setState({ createModel: obj })\r\n        console.log(this.state)\r\n    }\r\n\r\n    render() {\r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 16 },\r\n                sm: { span: 6 }\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 16 },\r\n                sm: { span: 10 }\r\n            }\r\n        }\r\n        const tailFormItemLayout = {\r\n            wrapperCol: {\r\n                xs: {\r\n                    span: 16,\r\n                    offset: 0\r\n                },\r\n                sm: {\r\n                    span: 10,\r\n                    offset: 6\r\n                }\r\n            }\r\n        }\r\n\r\n        const websiteOptions = this.state.autoCompleteResult.map(website => ({\r\n            label: website,\r\n            value: website,\r\n        }))\r\n\r\n        return (\r\n            <Layout className='animated fadeIn'>\r\n                <div>\r\n                    <CustomBreadcrumb arr={['表单', '基础表单']}></CustomBreadcrumb>\r\n                </div>\r\n                <div className='base-style'>\r\n                    <h3>何时使用</h3>\r\n                    <Divider></Divider>\r\n                    <p>用于创建一个实体或收集信息。</p>\r\n                    <p>需要对输入的数据类型进行校验时。</p>\r\n                </div>\r\n\r\n                <Row>\r\n                    <Col span={10}>\r\n                        <div className='base-style'>\r\n                            <div>\r\n                                {this.state.visible ? (\r\n                                    <Alert\r\n                                        message=\"你最好认真的填写表单!\"\r\n                                        type=\"warning\"\r\n                                        closable\r\n                                        banner\r\n                                        afterClose={this.handleClose}\r\n                                    />\r\n                                ) : null}\r\n                            </div>\r\n                            <Divider orientation=\"left\">基础功能</Divider>\r\n                            <Form {...formItemLayout} onFinish={this.handleFinish} onFinishFailed={this.handleFinishFailed} ref={this.formRef}>\r\n                                <Form.Item\r\n                                    name=\"username\"\r\n                                    label={\r\n                                        <span>\r\n                                            用户名&nbsp;\r\n                                            <Tooltip title='可以尽量好听点，真的!'>\r\n                                                <QuestionCircleOutlined />\r\n                                            </Tooltip>\r\n                                        </span>\r\n                                    }\r\n                                    rules = {[{ required: true, message: '请输入用户名' }]}>\r\n                                    <Input placeholder='请输入用户名' />\r\n                                </Form.Item>\r\n                                <Form.Item name=\"sex\" label=\"性别\" rules = {[{ required: true, message: '请选择性别' }]}>\r\n                                    <Radio.Group>\r\n                                        <Radio value=\"man\">男</Radio>\r\n                                        <Radio value=\"women\">女</Radio>\r\n                                        <Radio value=\"unknow\">不详</Radio>\r\n                                    </Radio.Group>\r\n                                </Form.Item>\r\n                                <Form.Item name=\"hobby\" label=\"爱好\" rules = {[{ required: true, message: '请至少选择一个爱好' }]} initialValue = {['A', 'B']}>\r\n                                    <Checkbox.Group style={{ width: '100%' }}>\r\n                                        <Row>\r\n                                            <Col span={8}>\r\n                                                <Checkbox value='A'>A</Checkbox>\r\n                                            </Col>\r\n                                            <Col span={8}>\r\n                                                <Checkbox disabled value='B'>\r\n                                                    B\r\n                                                </Checkbox>\r\n                                            </Col>\r\n                                            <Col span={8}>\r\n                                                <Checkbox value='C'>C</Checkbox>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Checkbox.Group>\r\n                                </Form.Item>\r\n                                <Form.Item name=\"age\" label=\"年龄\" rules={[{ required: true, message: '请输入年龄' }]}>\r\n                                    <InputNumber placeholder='请输入年龄' style={{ width: '100%' }} />\r\n                                </Form.Item>\r\n                                <Form.Item name=\"date-picker\" label=\"出生年月\" rules={[{ type: 'object', required: true, message: '请选择日期' }]}>\r\n                                    <DatePicker style={{ width: '100%' }} placeholder='请选择日期' />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item name=\"email\" label=\"邮箱\" rules={[{\r\n                                        type: 'email',\r\n                                        message: '请输入正确的邮箱!'\r\n                                    }, {\r\n                                        required: true,\r\n                                        message: '请输入邮箱'\r\n                                    }\r\n                                ]}>\r\n                                    <AutoComplete\r\n                                        options={websiteOptions}\r\n                                        onChange={this.handleWebsiteChange}\r\n                                        placeholder='请输入邮箱'>\r\n                                        <Input />\r\n                                    </AutoComplete>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item name=\"password\" label=\"密码\" rules={[{\r\n                                    required: true,\r\n                                    message: '请输入密码!'\r\n                                }]} hasFeedback>\r\n                                    <Input.Password placeholder=\"请输入密码\" autoComplete=\"off\"/>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item name=\"confirm\" label=\"确认密码\" dependencies={['password']} rules={[{\r\n                                    required: true,\r\n                                    message: '请确认密码!'\r\n                                }, {\r\n                                    validator: this.compareToFirstPassword\r\n                                }]} hasFeedback>\r\n                                    <Input.Password onBlur={this.handleConfirmBlur} placeholder=\"请确认密码\" autoComplete=\"off\"/>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item name=\"adress\" label=\"家庭住址\" rules={[{ type: 'array', required: true, message: '请选择住址!' }]} initialValue = {['sichuan', 'chengdu', 'gaoxin']}>\r\n                                    <Cascader options={residences} placeholder='请选择住址' />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"联系电话\">\r\n                                    <Space.Compact>\r\n                                        <Form.Item\r\n                                        name=\"prefix\"\r\n                                        noStyle\r\n                                        rules={[{ required: true, message: '请输入电话区号!' }]}\r\n                                        >\r\n                                            <Select style={{ width: 70 }}>\r\n                                                <Option value='86'>+86</Option>\r\n                                                <Option value='87'>+87</Option>\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                        name=\"phone\"\r\n                                        noStyle\r\n                                        extra=\"你最好写真实的电话号码.\"\r\n                                        rules={[{ required: true, message: '请输入联系电话!' }]}\r\n                                        >\r\n                                            <Input style={{ width: 'calc(100% - 70px)'}} />\r\n                                        </Form.Item>\r\n                                    </Space.Compact>\r\n                                </Form.Item>\r\n                                <Form.Item name=\"rate\" label=\"评分\" extra=\"这个项目怎么样.\" initialValue={5}>\r\n                                    <Rate disabled allowHalf />\r\n                                </Form.Item>\r\n                                <Form.Item name=\"switch\" label=\"switch\" valuePropName=\"checked\" initialValue={true}>\r\n                                    <Switch onChange={this.handleSwitchChange} />\r\n                                </Form.Item>\r\n                                <Form.Item name=\"slider\" label=\"slider\" initialValue={30}>\r\n                                    <Slider disabled={this.state.createModel.switch ? false : true} />\r\n                                </Form.Item>\r\n                                <Form.Item name=\"agreement\" valuePropName=\"checked\" {...tailFormItemLayout}>\r\n                                    <Checkbox onChange={this.handleAgreementChange}>\r\n                                        阅读并理解 <a href='https://github.com/ITchenjian'>此协议</a>\r\n                                    </Checkbox>\r\n                                </Form.Item>\r\n                                <Form.Item {...tailFormItemLayout}>\r\n                                    <Button\r\n                                        type=\"primary\"\r\n                                        htmlType=\"submit\"\r\n                                        disabled={this.state.createModel.agreement ? false : true}>\r\n                                        注册\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FromView\r\n","import FormBaseView from './FormBaseView.jsx'\r\n\r\nexport default FormBaseView\r\n"],"names":["CustomBreadcrumb","props","extraBreadcrumbItems","arr","map","res","key","path","title","_jsx","Link","to","children","breadcrumbItems","concat","Breadcrumb","style","marginBottom","items","shouldRender","nextProps","prevProps","join","React","Option","Select","residences","value","label","FromView","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","formRef","state","confirmDirty","autoCompleteResult","visible","createModel","switch","handleClose","setState","handleFinish","values","console","log","message","handleFinishFailed","data","handleConfirmBlur","e","target","compareToFirstPassword","rule","callback","current","getFieldValue","Promise","reject","Error","resolve","validateToNextPassword","validateFields","force","handleWebsiteChange","domain","handleSwitchChange","obj","handleAgreementChange","agreement","checked","_createClass","tailFormItemLayout","wrapperCol","xs","span","offset","sm","websiteOptions","this","website","_jsxs","Layout","className","Divider","Row","Col","Alert","type","closable","banner","afterClose","orientation","Form","_objectSpread","labelCol","onFinish","onFinishFailed","ref","name","Tooltip","QuestionCircleOutlined","rules","required","Input","placeholder","Radio","initialValue","Checkbox","width","disabled","InputNumber","DatePicker","AutoComplete","options","onChange","hasFeedback","autoComplete","dependencies","validator","onBlur","Cascader","Space","noStyle","extra","Rate","allowHalf","valuePropName","Switch","Slider","href","Button","htmlType","Component"],"sourceRoot":""}