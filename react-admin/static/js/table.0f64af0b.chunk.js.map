{"version":3,"file":"static/js/table.0f64af0b.chunk.js","mappings":"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","sources":["components/CustomBreadcrumb/CustomBreadcrumb.jsx","components/CustomBreadcrumb/index.js","views/ShowView/Table/Table.jsx","views/ShowView/Table/index.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Breadcrumb } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CustomBreadcrumb = props => {\r\n\r\n    const extraBreadcrumbItems = props.arr.map(res => {\r\n        if (typeof res === 'object') {\r\n            return {\r\n                key: res.path,\r\n                title: <Link to={res.path}>{res.title}</Link>,\r\n            };\r\n        } else {\r\n            return {\r\n                key: res,\r\n                title: res,\r\n            }\r\n        }\r\n    });\r\n\r\n    const breadcrumbItems = [{\r\n        title: <Link to='/index'>首页</Link>,\r\n        key: 'home',\r\n    }].concat(extraBreadcrumbItems)\r\n\r\n    return <Breadcrumb style={{ marginBottom: 16 }} items={breadcrumbItems}></Breadcrumb> \r\n}\r\n\r\nCustomBreadcrumb.propTypes = {\r\n    arr: PropTypes.array.isRequired\r\n}\r\n\r\nfunction shouldRender(nextProps, prevProps) {\r\n    if (nextProps.arr.join() === prevProps.arr.join()) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport default React.memo(CustomBreadcrumb, shouldRender)\r\n","import CustomBreadcrumb from './CustomBreadcrumb.jsx'\r\n\r\nexport default CustomBreadcrumb\r\n","import React, { Component, useState } from 'react'\r\nimport CustomBreadcrumb from '@/components/CustomBreadcrumb'\r\nimport { Layout, Divider, Row, Col, Tag, Table, Button, Anchor } from 'antd'\r\nimport '@/style/view-style/table.scss'\r\n\r\nconst { Column } = Table\r\n\r\nconst Table1 = (props) => (<Table columns={props.columns} dataSource={props.data} />)\r\n\r\nconst Table2 = (props) => (\r\n    <Table dataSource={props.data}>\r\n        <Column title='Name' dataIndex='name' key='lastName' />\r\n        <Column title='Age' dataIndex='age' key='age' />\r\n        <Column title='Address' dataIndex='address' key='address' />\r\n        <Column\r\n            title='Tags'\r\n            dataIndex='tags'\r\n            key='tags'\r\n            render={tags => (\r\n                <span>\r\n                    {tags.map(tag => (\r\n                        <Tag color='blue' key={tag}>\r\n                            {tag}\r\n                        </Tag>\r\n                    ))}\r\n                </span>\r\n            )}\r\n        />\r\n        <Column\r\n            title='Action'\r\n            key='action'\r\n            render={(text, record) => (\r\n                <span>\r\n                    <Button type='link'>Invite {record.lastName}</Button>\r\n                    <Divider type='vertical' />\r\n                    <Button type='link'>Delete</Button>\r\n                </span>\r\n            )}\r\n        />\r\n    </Table>\r\n)\r\n\r\nclass Table3 extends Component {\r\n    state = {\r\n        selectedRowKeys: []\r\n    }\r\n\r\n    onSelectChange = selectedRowKeys => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys)\r\n        this.setState({ selectedRowKeys })\r\n    }\r\n\r\n    render() {\r\n        const { selectedRowKeys } = this.state\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n            hideDefaultSelections: true,\r\n            selections: [\r\n                {\r\n                    key: 'all-data',\r\n                    text: 'Select All Data',\r\n                    onSelect: () => {\r\n                        this.setState({\r\n                            selectedRowKeys: [...Array(46).keys()] // 0...45\r\n                        })\r\n                    }\r\n                },\r\n                {\r\n                    key: 'odd',\r\n                    text: 'Select Odd Row',\r\n                    onSelect: changableRowKeys => {\r\n                        let newSelectedRowKeys = []\r\n                        newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                            if (index % 2 !== 0) {\r\n                                return false\r\n                            }\r\n                            return true\r\n                        })\r\n                        this.setState({ selectedRowKeys: newSelectedRowKeys })\r\n                    }\r\n                },\r\n                {\r\n                    key: 'even',\r\n                    text: 'Select Even Row',\r\n                    onSelect: changableRowKeys => {\r\n                        let newSelectedRowKeys = []\r\n                        newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                            if (index % 2 !== 0) {\r\n                                return true\r\n                            }\r\n                            return false\r\n                        })\r\n                        this.setState({ selectedRowKeys: newSelectedRowKeys })\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n        return <Table rowSelection={rowSelection} columns={this.props.columns} dataSource={this.props.data} />\r\n    }\r\n}\r\n\r\nclass Table4 extends Component {\r\n    state = {\r\n        filteredInfo: null,\r\n        sortedInfo: null\r\n    }\r\n    handleChange = (pagination, filters, sorter) => {\r\n        console.log('Various parameters', pagination, filters, sorter)\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter\r\n        })\r\n    }\r\n\r\n    clearFilters = () => {\r\n        this.setState({ filteredInfo: null })\r\n    }\r\n\r\n    clearAll = () => {\r\n        this.setState({\r\n            filteredInfo: null,\r\n            sortedInfo: null\r\n        })\r\n    }\r\n\r\n    setAgeSort = () => {\r\n        this.setState({\r\n            sortedInfo: {\r\n                order: 'descend',\r\n                columnKey: 'age'\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        let { sortedInfo, filteredInfo } = this.state\r\n        sortedInfo = sortedInfo || {}\r\n        filteredInfo = filteredInfo || {}\r\n        const columns = [\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                filters: [\r\n                    { text: 'Edward King 20', value: 'Edward King 20' },\r\n                    { text: 'Edward King 25', value: 'Edward King 25' }\r\n                ],\r\n                filteredValue: filteredInfo.name || null,\r\n                onFilter: (value, record) => record.name.includes(value)\r\n            },\r\n            {\r\n                title: 'Age',\r\n                dataIndex: 'age',\r\n                key: 'age',\r\n                sorter: (a, b) => a.age - b.age,\r\n                sortOrder: sortedInfo.columnKey === 'age' && sortedInfo.order\r\n            },\r\n            {\r\n                title: 'Address',\r\n                dataIndex: 'address',\r\n                key: 'address',\r\n                filters: [\r\n                    { text: 'London, Park Lane no. 24', value: 'London, Park Lane no. 24' },\r\n                    { text: 'London, Park Lane no. 27', value: 'London, Park Lane no. 27' }\r\n                ],\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.address.includes(value)\r\n            }\r\n        ]\r\n        return (\r\n            <div>\r\n                <div className='table-operations'>\r\n                    <Button onClick={this.setAgeSort}>Sort age</Button>\r\n                    <Button onClick={this.clearFilters}>Clear filters</Button>\r\n                    <Button onClick={this.clearAll}>Clear filters and sorters</Button>\r\n                </div>\r\n                <Table columns={columns} dataSource={this.props.data} onChange={this.handleChange} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst TableView = () => {\r\n    const [columns] = useState([\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            render: text => <Button type='link'>{text}</Button>\r\n        },\r\n        {\r\n            title: 'Age',\r\n            dataIndex: 'age',\r\n            key: 'age'\r\n        },\r\n        {\r\n            title: 'Address',\r\n            dataIndex: 'address',\r\n            key: 'address'\r\n        },\r\n        {\r\n            title: 'Tags',\r\n            key: 'tags',\r\n            dataIndex: 'tags',\r\n            render: tags => (\r\n                <span>\r\n                    {tags.map(tag => {\r\n                        let color = tag.length > 5 ? 'geekblue' : 'green'\r\n                        if (tag === 'loser') {\r\n                            color = 'volcano'\r\n                        }\r\n                        return (\r\n                            <Tag color={color} key={tag}>\r\n                                {tag.toUpperCase()}\r\n                            </Tag>\r\n                        )\r\n                    })}\r\n                </span>\r\n            )\r\n        },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (text, record) => (\r\n                <span>\r\n                    <Button type='link'>Invite {record.name}</Button>\r\n                    <Divider type='vertical' />\r\n                    <Button type='link'>Delete</Button>\r\n                </span>\r\n            )\r\n        }\r\n    ])\r\n    const [tableData, setTableData] = useState([])\r\n\r\n    setTimeout(() => {\r\n        let data = [];\r\n        for (let i = 0; i < 46; i++) {\r\n            data.push({\r\n                key: i,\r\n                name: `Edward King ${i}`,\r\n                age: `${i + 1}`,\r\n                address: `London, Park Lane no. ${i}`,\r\n                tags: ['nice', 'developer']\r\n            })\r\n        }\r\n        setTableData(data)\r\n    }, 3000)\r\n    \r\n\r\n    return (<Layout className='animated fadeIn'>\r\n        <div>\r\n            <CustomBreadcrumb arr={['通用', '按钮']}></CustomBreadcrumb>\r\n        </div>\r\n        <div className='base-style'>\r\n            <h3>何时使用</h3>\r\n            <Divider />\r\n            <p>当有大量结构化的数据需要展现时；</p>\r\n            <p>当需要对数据进行排序、搜索、分页、自定义操作等复杂行为时。</p>\r\n        </div>\r\n\r\n        <Row>\r\n            <Anchor className='toc-affix' affix={false} items={[{\r\n                key: '1',\r\n                href: '#basic',\r\n                title: '基础表格',\r\n            },{\r\n                key: '2',\r\n                href: '#JSX',\r\n                title: 'JSX表格',\r\n            },{\r\n                key: '3',\r\n                href: '#checked',\r\n                title: '可选表格',\r\n            },{\r\n                key: '4',\r\n                href: '#sort',\r\n                title: '可筛选排序表格',\r\n            }]} />\r\n            <Col>\r\n                <div className='base-style'>\r\n                    <h3 id='basic'>基础表格</h3>\r\n                    <Divider />\r\n                    <Table1 columns={columns} data={tableData} />\r\n                </div>\r\n            </Col>\r\n            <Col>\r\n                <div className='base-style'>\r\n                    <h3 id='JSX'>JSX表单</h3>\r\n                    <Divider orientation='left'>JSX表格</Divider>\r\n                    <Table2 data={tableData} />\r\n                </div>\r\n            </Col>\r\n            <Col>\r\n                <div className='base-style'>\r\n                    <h3 id='checked'>可选表单</h3>\r\n                    <Divider orientation='left'>可选表格</Divider>\r\n                    <Table3 columns={columns} data={tableData} />\r\n                </div>\r\n            </Col>\r\n            <Col>\r\n                <div className='base-style'>\r\n                    <h3 id='sort'>可筛选排序表单</h3>\r\n                    <Divider orientation='left'>可筛选排序表格</Divider>\r\n                    <Table4 data={tableData} />\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    </Layout>)\r\n}\r\n\r\nexport default TableView\r\n","import TableView from './Table.jsx'\r\n\r\nexport default TableView\r\n"],"names":["CustomBreadcrumb","props","extraBreadcrumbItems","arr","map","res","key","path","title","_jsx","Link","to","children","breadcrumbItems","concat","Breadcrumb","style","marginBottom","items","shouldRender","nextProps","prevProps","join","React","Column","Table","Table1","columns","dataSource","data","Table2","_jsxs","dataIndex","render","tags","tag","Tag","color","text","record","Button","type","lastName","Divider","Table3","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","state","selectedRowKeys","onSelectChange","console","log","setState","_createClass","value","_this2","rowSelection","this","onChange","hideDefaultSelections","selections","onSelect","_toConsumableArray","keys","changableRowKeys","newSelectedRowKeys","filter","index","Component","Table4","_Component2","_super2","_this3","_len2","_key2","filteredInfo","sortedInfo","handleChange","pagination","filters","sorter","clearFilters","clearAll","setAgeSort","order","columnKey","_this$state","filteredValue","name","onFilter","includes","a","b","age","sortOrder","address","className","onClick","_useState","useState","toUpperCase","_slicedToArray","_useState3","_useState4","tableData","setTableData","setTimeout","i","push","Layout","Row","Anchor","affix","href","Col","id","orientation"],"sourceRoot":""}